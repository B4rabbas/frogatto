{
id: "particle_attache",
prototype: ["effects_attache"],
zorder: "@include data/zorder.cfg:near_player_foreground_effects",



properties: {
#-------------------------- effects_attache overrides --------------------------#
	turn_off: "	animate(me, {
					emission_rate: 0,
				},{
					duration: time_to_die/5,
				})",


#-------------------------- vars --------------------------#
	_particle_type: {
		type: "string",
		set: "[
			set(_data, value),
			set(particles, info.info),
			set(_animations, info.animations),
		] where info = ParticleSystemInfo<- get_document(sprintf('data/particles/%s.cfg', value))",
	},

	_animations: { type: "null|[ParticleSystemAnimation]" },

	emission_rate: {
		variable: false,
		type: "any",
		set: "set(particles.emission_rate, value) asserting particles != null",
		get: "particles.emission_rate asserting particles != null",
	},

	time_to_live: {
		default: -1.0,
		type: "decimal",
		set: "[set(_data, value), if(value = 0, remove_object(me))]",
	},

#-------------------------- special setup behavior --------------------------#
	apply_animation: "def(ParticleSystemAnimation anim) ->commands
	animate(me, {
		(anim.attribute): anim.target,
	}, {
		duration: anim.duration,
		easing: lib.easing.get(anim.easing),
	})
	",
},

on_create: "proto_event('effects_attache', 'create'); if(_animations, map(_animations, apply_animation(value)))",


}
