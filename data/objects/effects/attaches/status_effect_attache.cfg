{
	id: "status_effect_attache",
	prototype: ["effects_attache"],



	properties: {
		kind: { type: "StatusEffectKind", dynamic_initialization: true },
		cycle_started_at: { type: "int", dynamic_initialization: true },
		
	
#-------------------------- custom_behavior --------------------------#
		hittable_parent: "obj hittable :: me._parent_obj asserting me._parent_obj is obj hittable",

		info_for_kind: "StatusEffectKindInfo :: find_or_die(
													me.hittable_parent.status_effect_presets,
													value.kind = me.kind
												)",

		affect_parent_status: "commands :: if(is_alive, info_for_kind.process_effect(me))",

		consider_suicide: "commands :: if(level.cycle > cycle_started_at + info_for_kind.duration, schedule_death_cleanup)",
		
#-------------------------- prototype overrides --------------------------#
		do_setup: "commands :: [initialize_position, set(cycle_started_at, level.cycle)]",
	},

	
	on_process: "	[
						affect_parent_status,
						consider_suicide
					]",

}
