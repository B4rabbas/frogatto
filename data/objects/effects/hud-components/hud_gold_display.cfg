{
	id: "hud_gold_display",
	is_strict: true,
	use_absolute_screen_coordinates: true,
	serializable: false,
	hidden_in_game: true,
	
	zorder: "@include data/zorder.cfg:in_front_of_everything",

	properties: {
		set_text: "def(string text) -> commands [set(txt, text), fire_event(me, 'create')]",
		txt: {type: "string", default: "+"},
		size: "4",
		font: "string :: 'numbers_gold_large'",
		align: "'center'",
		
		
		comparison_point_for_coins: { type: "int", default: 0 },
		last_changed_coins: { type: "int", default: 0 },
		display_timeout: "decimal :: 150",
		
		vertical_full_offset: "decimal :: 90",
		vertical_offset: "vertical_full_offset * lib.math.ease_in_out_elastic(ratio)
		
			where ratio = (1.0 - min(1.0, decimal(level.cycle -  last_changed_coins)/display_timeout ))",
		
		poll_for_coin_changes: "if(comparison_point_for_coins != level.player.coins,
									[
										set(comparison_point_for_coins, level.player.coins),
										set(last_changed_coins, level.cycle),
									]
								)",
								
		native_position: "{x: decimal, y: decimal} :: {x: screen_w - 50*2, y: -50} where screen_w = level.camera_position[2]",

		set_vertical_pos: "commands :: set(mid_y, native_position.y + vertical_offset)"
	},

	on_create: "[text(txt, font, size, align)]",


	//Sync UI state with Frogatto.
	on_process: "[
		if(level.player is obj frogatto_playable, [
			me.set_text(str(level.player.coins)),
			poll_for_coin_changes,
			set_vertical_pos,
		])
	]",
	
	
}