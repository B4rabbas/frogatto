{
	id: "circle_effect",
	is_strict: true,

	properties: {
		outer_radius: {
			type: "decimal",
			change: "set(scale, 2.0*outer_radius/img_w)",
		},

		inner_radius: { type: "decimal" },

		color: { type: "[decimal,decimal,decimal,decimal]", default: [1.0,1.0,1.0,1.0] },
	},

	shader: {
		fragment: """
		uniform vec4 u_property_color;
		uniform vec4 u_anura_sprite_area;
		uniform float u_property_outer_radius;
		uniform float u_property_inner_radius;
        varying vec2 v_texcoord;

		void main()
		{
			vec2 uv = vec2((v_texcoord.x - u_anura_sprite_area.x)/(u_anura_sprite_area[2] - u_anura_sprite_area[0]),
			               (v_texcoord.y - u_anura_sprite_area.y)/(u_anura_sprite_area[3] - u_anura_sprite_area[1]));

			float dist = sqrt((uv.x - 0.5)*(uv.x - 0.5) + (uv.y - 0.5)*(uv.y - 0.5))*u_property_outer_radius*2.0;

			if(dist > u_property_inner_radius && dist < u_property_outer_radius) {
				gl_FragColor = u_property_color;
			} else {
				gl_FragColor = vec4(0,0,0,0);
			}
		}
		
		""",
	},
}
