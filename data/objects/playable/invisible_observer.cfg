{
id: "invisible_observer",
prototype: ["player_controlled"],
is_human: true,
no_move_to_standing: true,
hidden_in_game: true,

properties: {
	team: "'player'",

#-------------------------- vars --------------------------#
		//This is the previous, "real" player object we'll restore after a cutscene
	_player: {type: "obj player_controlled", dynamic_initialization: true, persistent: false},
	
		//These represent the level we're going to return to
	_post_cutscene_level: {type: "string", dynamic_initialization: true, persistent: false},
	_post_cutscene_object: {type: "string", dynamic_initialization: true, persistent: false},

		//This is an object containing the script for this cutscene, which will get triggered when we enter the new level.
	_cutscene_trigger_label: { type: "string|null",  default: null },
	
	cutscene_finished: "commands :: bind_command(def()
		if(_post_cutscene_level, [
			set(control_lock, []),
			screen_flash([0,0,0,0], [0,0,0,5], 50),
			schedule(50,
				[set(_player.alpha, 0),
				add(_player.stored_events, me.stored_events),
				execute(_player, schedule(1, set(brightness, 255))),
				teleport(_post_cutscene_level,_post_cutscene_object,'instant',_player),
				screen_flash([0,0,0,255], [0,0,0,-5], 50),
				set(control_lock, null)
			])
		]))",
},

on_enter_level: "if(_cutscene_trigger_label, [
					set(cutscene_controller.observer, me),
					fire_event(cutscene_controller, 'do_cutscene')
				] where cutscene_controller = (obj cutscene_controller <- get_object_or_die(level,_cutscene_trigger_label)))",

on_outside_level: "/*don't get hurt, because we might start outside bounds*/",


animation: {
	id: "normal",
	image: "characters/stand_in_selector.png",
	rect: [0,0,15,15],
},
}