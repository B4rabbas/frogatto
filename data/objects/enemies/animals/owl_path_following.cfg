{
id: "owl_path_following",
prototype: ["movable_enemy"],
always_active: true,
friction: 1000,
traction: 1000,
traction_in_air: 1000,
hitpoints: 1200,
platform_area: [23,16,45,41],
has_feet: false,
solid_area: null,

zorder: "@include data/zorder.cfg:in_front_of_parallax_objects",

editor_info: {
	category: "enemies, forest",
},
properties: {
#-------------------------- constructor/destructor logic --------------------------#
	specific_creature_type_constructor: "commands :: 	[
															set(activation_area, [r.x,r.y,r.x2,r.y2]) where r = _activation_rectangle
														]",
	
#-------------------------- metadata --------------------------#
	team: "'evil'",
	attack_damage: 2,
	physical_size: 48,
	material_sound: "enum fur",
	default_anim: "'fly'",
	taxonomy: "TaxonomyType :: enum bird",

	point_series: { type: "[[int,int]]", default: [], editor_info: { type: "points", value: "[]" } },
	__point_series: "[{x: int, y:int}] :: map(point_series, { x: value[0], y: value[1] })",

#---- general target-seeking ----#
	movement_speed: "15",

	seek_target: "[
		if(mid_x < _target.x, [try_facing(1),add(velocity_x, movement_speed)], [try_facing(-1), add(velocity_x,-movement_speed)] ),
		if(mid_y < _target.y, add(velocity_y, movement_speed), add(velocity_y,-movement_speed) ),
								if(is_at_target, iterate_target)]",
	//REGARDING THIS ISSUE:  iterate_target should have been a command, but instead it's just an integer expression.  The error message is giving the correct bug... but the wrong code location.
								
							
	is_at_target: "if((abs(mid_x - _target.x) < trigger_distance) and (abs(mid_y - _target.y) < trigger_distance), true, false) where trigger_distance = max(10.0, current_speed/10.0), where current_speed = abs(hypot(velocity_x, velocity_y))",
	
	_target: "{x:int, y:int} :: {x: p[0], y:p[1]} where p = point_series[_target_index]",
	_target_index: { type:"int", default: 0 },
	iterate_target: "set(_target_index, (_target_index + 1)%(size(point_series)-1))",

	_activation_rectangle: "{
								x: fold(map(__point_series,value.x), min(a,b)) - margin,
								y: fold(map(__point_series,value.y), min(a,b)) - margin,
								x2: fold(map(__point_series,value.x), max(a,b)) + margin,
								y2: fold(map(__point_series,value.y), max(a,b)) + margin
							} where margin = 200",
},

on_process_fly: "[seek_target]",
on_end_anim: "animation('fly')",


#just some fluff to make the motion less unnaturally smooth:				
on_flap: "add(velocity_y, -50)",
on_antiflap: "add(velocity_y, 50)",

animation: [

	{
		"@base": true,
		image: "enemies/owl.png",
		pad: 3,
		accel_x: 0,
		accel_y: 0,
		feet_x: 35,
		feet_y: 50,

		body_area: "all",
		attack_area: [25,30,45,45],
	},
	{
		id: "fly",
		events: "18:20:22:flap,0:2:4:antiflap",
		rect: [1,1,69,55],
		frames: 7,
		frames_per_row: 1,
		duration: 4,
	},
	{
		id: "turn",
		rect: [1,407,69,461],
		frames: 1,
		duration: 5,
	},
	{
		id: "hurt",
		rect: [73,1,141,55],
		frames: 1,
		duration: 18,
	},
],
}
