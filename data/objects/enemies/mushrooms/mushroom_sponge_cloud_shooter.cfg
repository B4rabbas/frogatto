{
id: "mushroom_sponge_cloud_shooter",
hitpoints: 200,

friction: 4000,
always_active: true,
prototype: ["ant_flying"],
properties: {
	title: "~Sponge Cloud~",
	description: "~Imagine a very tiny, very unhappy thundercloud. A great argument for granite rooves.~",
	taste: "~Like a fetid algae-filled lake.~",
	
	altitude_adjustment: "(wave(cycle*5+1000)/50)",
	default_anim: "'fly1'",
	
	dive_speed_x: "if(higher_difficulty, 24+1d12, 24)",
	dive_speed_y: "if(higher_difficulty, 16+1d16, 16)",
	climb_speed_x: "if(higher_difficulty, 12, 8)",
	climb_speed_y: "if(higher_difficulty, 12, 8)",
	
	bounds_width: "int :: abs(_x_bound - _x2_bound)",
	
	target: "{x: int, y: int} :: {x: level.player.mid_x, y: level.player.mid_y - 220}", 
	
	should_dive: "if(	
						level.player.y > y + 50 and level.player.y < _dive_height and
						level.player.midpoint_x > _x_bound and
						level.player.midpoint_x < _x2_bound, 1, 0)",

	should_climb: "if(midpoint_y > _dive_height or midpoint_y < _desired_height-20 or midpoint_x > _x2_bound + bounds_width or midpoint_x < _x_bound - bounds_width, true, false)",

	begin_dive: " [
								if(level.player.midpoint_x > midpoint_x, facing(1), facing(-1)),
								set(_behavior, 'dive'),
								add(velocity_y,200)]",
	begin_climb: " [	set(_behavior, 'climb')]",
	process_dive: " [	if(target.y > midpoint_y, add(velocity_y, dive_speed_y),add(velocity_y,-dive_speed_y) ),
								if(target.x > midpoint_x, [try_facing(1),add(velocity_x, dive_speed_x)],[try_facing(-1),add(velocity_x,-dive_speed_x)] ),
							   	if(should_climb, begin_climb,  try_shooting )]",
	process_climb: " [	if(midpoint_x < _init_x, [try_facing(1),add(velocity_x, climb_speed_x)],[try_facing(-1),add(velocity_x,-climb_speed_x)] ),
								if(midpoint_y < _init_y, add(velocity_y, climb_speed_y),add(velocity_y,-climb_speed_y) ),
								if(should_hover, begin_hover)
									]",
	begin_hover: " [	set(_behavior, 'hover')]",
	process_hover: " [	if(midpoint_x < _init_x, [try_facing(1),add(velocity_x, climb_speed_x)],[try_facing(-1),add(velocity_x,-climb_speed_x)] ),
								if(midpoint_y < _init_y, add(velocity_y, climb_speed_y),add(velocity_y,-climb_speed_y) ),
								if(should_dive, begin_dive)
									]",
	should_hover: "if(abs(midpoint_x - _init_x) < 100 and abs(midpoint_y - _init_y) < 100, 1, 0)",


	try_shooting: "do_unless_on_cooldown(30, '_last_shot', {
						on_ready:  [animation('shoot'), fire_shots], //do_until_count(3, '_shot_counter', {on_loop: [animation('shoot'), fire_shots], on_exit: begin_climb}),
						otherwise: null
					})",

	taxonomy: "TaxonomyType :: enum mushroom",
	acquirable_item_drop_value: 10,					
	points_value: 14,
	physical_size: "32",
	
	central_process: " [switch(_behavior,
							'', process_climb,
							'hover', process_hover,
							'dive', process_dive,
							'climb', process_climb,
							'regular', [proto_event('ant_flying', 'process_fly'), if(should_dive, begin_dive)]),
							set(rotate, sin(cycle*7) * 4.0),
							if(animation in ['fly1','fly2','fly3'], [set(animation, 'fly'+animation_suffix), set(time_in_animation, time_in_animation)])]",

	animation_suffix: "lib.math.round(sin(cycle*4)*1.0+1.0)+1",  //smoothly oscillate between 1 -> 3

	springiness: 190,
	spring_amount: 1200,
	bounce_roundness: 1,
	material_sound: "'fungus'",
	
#-------------------------- shot handling --------------------------#
	shot_offset: "def(decimal angle_offset) -> {x: decimal, y: decimal} {x: mid_x + offset[0], y: mid_y + offset[1]} where offset = orbit(0, 0, self.rotate - 90 + angle_offset, mid_y-10-y)",
	shot_speed: "550 + 1d150",

	shot_vel: "def(decimal angle_offset) -> {x: decimal, y: decimal} {x: shot_speed * cos(angle_offset + self.rotate - 90), y: shot_speed * sin(angle_offset + self.rotate - 90)}",
	spawn_individual_shot: "def(decimal angle_offset) -> commands spawn('${type}.shot', shot_offset(angle_offset).x, shot_offset(angle_offset).y, {velocity_x: shot_vel(angle_offset).x, velocity_y: shot_vel(angle_offset).y})",

	fire_shots: "[spawn_individual_shot(-135 - 1d5), spawn_individual_shot(180), spawn_individual_shot(135 + 1d5) ]",
	
	
	
#-------------------------- vars --------------------------#
	custom_reinitialize_vars: "if(_dive_height = null, set(_dive_height, if(floor != null, floor.y, mid_y + 300)) where floor = find_floor(mid_x,mid_y,-300))",
	_dive_height: { type: "int", editor_info: { type: "y", value: "midpoint_y+(9*32)" } },

#-------------------------- tmp vars --------------------------#
	_behavior: { type: "string", default: "hover", persistent: false },
	_last_clung: { type: "int", default: 0, persistent: false },
	_init_x: { type: "int", init: "midpoint_x", persistent: false },
	_init_y: { type: "int", init: "midpoint_y", persistent: false },


	_shot_counter: { type: "int", default: 0, persistent: false },
	_last_shot: { type: "int", default: 0, persistent: false },
},
on_create: "[			proto_event('ant_flying','create'),
						animation(default_anim),
						if(_init_x = null, set(_init_x, midpoint_x)),
						if(_init_y = null, set(_init_y, midpoint_y)),
					]",
on_end_anim: "animation(default_anim)",
on_end_hurt_anim: "animation(default_anim)",


on_turn: "if(cycle-_last_turned > 30,[set(_last_turned,cycle),set(facing, -facing)])", #symmetric creature, so overrule the usual turn behavior because we have no turn anim

on_process: "central_process",

on_wingflap: "[add(velocity_y,-150), sound('Jellyfish-Squish'+1d3+'.wav')]",

platform_area: [7,13,38,14],
on_bounced_on: "add(velocity_y,450)",

solid_area: null,
editor_info: {
	category: "enemies, forest",
},
animation: [
	{
		"@base": true,
		image: "enemies/mushroom-sponge-cloud-shooter.png",
		no_remove_alpha_borders: true,
		body_area: "all",
		accel_y: 0,
		feet_x: 23,
		feet_y: 25,
		pad: 3,
		attack_area: [8,18,38,38],
	},
	{
		id: "fly1",
		rect: [1,1,45,46],
		frames: 7,
		duration: 3,
		reverse: true,
		accel_x: 0,
		events: "35:wingflap",
	},
	{
		id: "fly2",
		rect: [1,49,45,94],
		frames: 7,
		duration: 3,
		reverse: true,
		accel_x: 0,
		events: "35:wingflap",
	},
	{
		id: "fly3",
		rect: [1,97,45,142],
		frames: 7,
		duration: 3,
		reverse: true,
		accel_x: 0,
		events: "35:wingflap",
	},
	{
		id: "spring",
		rect: [1,1,45,46],
		frames: 1,
		duration: 3,
	},
	{
		id: "turn",
		rect: [1,1,45,46],
		frames: 1,
		duration: 3,
	},
	{
		id: "hurt",
		rect: [1,1,45,46],
		frames: 1,
		duration: 18,
	},
	{
		id: "shoot",
		rect: [1,1,45,46],
		frames: 1,
		duration: 30,
	},
],


object_type: [
	{
		id: "shot",
		object_level_collisions: true,
		solid_dimensions: ["player"],
		zsub_order: 2,
		prototype: ["shot"],
		properties: {
			attack_damage: "if(higher_difficulty,2,1)",
			damage_type: "'acid'",
			
			spawn_particles: "bind_command(def() spawn('mushroom_sponge_cloud_shooter.particle_holder',mid_x, mid_y, 1))",

			death_effects: "def(string type) -> commands [
					spawn_particles,
				]",

		},
		on_create: "[
						schedule(40+1d15, force_death()),
						set(facing, if(1d2=2, 1, -1)),
						spawn_particles
					]",
		on_die: "spawn_particles",
		on_end_normal_anim: "animation('normal')",
		on_process: "add(rotate, 5)",
		animation: [
			{
				image: "enemies/mushroom-sponge-cloud-shooter.png",
				attack_area: "all",
				accel_y: 00,
				pad: 3,
				id: "normal",
				rect: [1,161,14,174],
				frames: 4,
				duration: 5,
			},
		],
	},
	{
		id: "particle_holder",
		dies_on_inactive: true,
		hidden_in_game: true,
		zsub_order: 1,
		on_create: "[spawn_particles,schedule(50,die())]",
		properties: {
			spawn_particles: "map(range(3), schedule(1d5, spawn('mushroom_sponge_cloud_shooter.particle',mid_x, mid_y, 1)))",
		},
	},
	{
		id: "particle",
		dies_on_inactive: true,
		zsub_order: 1,
		on_create: "[
						set(velocity_x, 1d200-100),
						set(velocity_y, 1d200-100)
					]",
		on_end_anim: "die()",
		animation: [
			{
				image: "enemies/mushroom-sponge-cloud-shooter.png",
				attack_area: "all",
				accel_y: 00,
				pad: 3,
				id: "normal",
				rect: [1,178,7,184],
				frames: 7,
				duration: 3,
			},
		],
	},
]
}
