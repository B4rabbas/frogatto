{
id: "spider_black",
prototype: ["spider"],

properties: {
#-------------------------- metadata --------------------------#
	
	title: "~Black Spider~",
	description: "~Like something out of a horror movie. These giant spiders inhabit the dark caves of the swamps on the island waiting to descend on anything that moves.~",
	taste: "~Not half bad, once you get over the texture.~",
	
#-------------------------- custom behavior --------------------------#
	do_attack: "[[
			animation('drop'),
			expand_activation_border,
			schedule(stepsDown,animation('dangle2')),
			schedule(stepsDown + pause,[animation('retract2'),set(rotate,0)]),
			map(range(stepsDown), 'step',
				schedule(step, set(me.y, me.y + (sin(step*(90.0/stepsDown))*me._low[1])*1))
				),

			map(range(stepsUp), 'step',
				schedule(step + stepsDown + pause, set(me.y, me.y + me._low[1] - (sin(step*(90.0/stepsUp))*me._low[1]) ))
				),
			
			map(range(0, newTime-20), 'step',
				schedule(step, set(x, x + ((sin((percent)*360.0*1.13))*20.0)) where percent = decimal(decimal(step)/decimal(stepsDown+pause)))
				),
			map(range(newTime-20, newTime), 'step',
				schedule(step, set(x, x + (1.0 - percent)*(sin(360.0*1.13))*20.0) where percent = (step-(newTime-20.0))/20.0 )
				),
			map(range(newTime), 'step',
				schedule(step, fire_event('set_silk'))
				),
			schedule(newTime, [set(x, x), set(y, y), fire_event('recover'), _silk.set_ends(me.mid_x+spinneret.x, me.mid_y+spinneret.y, me.mid_x+me._anchor[0], me.mid_y+me._anchor[1])])
			] where newTime = stepsUp + stepsDown + pause
			] where stepsDown = 20
			where stepsUp = 80
			where pause = 100",
			

},



on_drop: "[sound_falloff('spider-pounce'+1d9+'.wav'),
			[
				set(_anchor, new_anchor),
				set(_position, [self.mid_x, self.mid_y]),
				
				add_object(_knot), set(_knot.mid_x, mid_x+new_anchor[0]-2*facing), set(_knot.mid_y, mid_y+new_anchor[1]+2),
				add_object(_silk), set(_silk.mid_x, x), set(_silk.mid_y, y),
				set(_silk.x_1, mid_x+spinneret.x), set(_silk.y_1, mid_y+spinneret.y), set(_silk.x_2, mid_x+new_anchor[0]), set(_silk.y_2,mid_y+new_anchor[1]),
				
			] where new_anchor = solid_point([0,-8]),
			set(_low, zip(map(solid_point([0,16]), value/1.1), [0, 20], a-b)),
			fire_event('attack')
		]",
}
